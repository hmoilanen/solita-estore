// // // // // // // // // //
App - yleisiä ajatuksia / ideoita:
-hae tuotteet erillisestä js-filusta (mock request) ja talleta ne storeen
	-> see: https://mocki.io/
-kun ostoskori päivittyy, päivitä myös ko. cookiet / local storage
	-> ...jotta ostotapahtuma ei mene hukkaan vaikka esim selain kaatuu

// // // // // // // // // //
Vuex / store:
-ostoskori
-itemit

// // // // // // // // // //
Logiikka:
-increaseAmountOfProducts
-decreaseAmountOfProducts
-addProductToCart
-removeProductFromCart
-emptyCart
-makePurchase

// // // // // // // // // //
Rakenne:
-ländäysnäkymä / home
	-linkki varisnaiseen kauppaan
-perusnäkymä (valittavat tuotteet)
	-tuote
		=tuotetiedot
		-addToCart-nappi
-ostoskorinäkymä (valitut tuotteet) -> oma route?
	-tuote
		-määrä
	-summa
	-kassalle-nappi
-ostotapahtuma ("modaali"?)
	-phase 1: valitut tuotteet ja varmistus
	-phase 2: ostajan tiedot (+ vastaanottajan tiedot jos eri)
	-phase 3: maksutiedot (tee dummyna!)
	-phase 4: palaute ostotapahtumasta (success / error -> käytä huumoria :))

// // // // // // // // // //
Bäkkiin lähtevä data: 

tilaus: {
	tekijä: {
		...tiedot
	},
	tuotteet: [
		tuote1: {
			id: '',
			nimi: '',
			määrä: '',
			...?
		},
		tuote2: {
			id: '',
			nimi: '',
			määrä: '',
			...?
		},
		...
	],
	// laskutus ei kuulu tähän datapakettiin
}